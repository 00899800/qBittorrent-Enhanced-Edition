/*
-----BEGIN QCMOD-----
name: libtorrent
arg: with-libtorrent-inc=[path], Path to libtorrent include files
arg: with-libtorrent-lib=[path], Path to libtorrent library files
-----END QCMOD-----
*/
class qc_libtorrent : public ConfObj
{
public:
	qc_libtorrent(Conf *c) : ConfObj(c) {}
	QString name() const { return "libtorrent >= 0.11 (>= 0.12 ADVISED)"; }
	QString shortname() const { return "libtorrent"; }
	bool exec(){
        	QString s;
		s = conf->getenv("QC_WITH_LIBTORRENT_INC");
		if(!s.isEmpty()) {
		  if(!conf->checkHeader(s, "libtorrent/kademlia/node.hpp")){
				return false;
			}
			if(!conf->checkHeader(s, "libtorrent/extensions/ut_pex.hpp")) {
				qWarning("Libtorrent >= v0.12 was not detected, PeX will be disabled.");
				conf->addDefine("NO_PEX");
      			}
			if(conf->checkHeader(s, "libtorrent/lsd.hpp")){
				conf->addDefine("V_0_13");
			}
		}else{
			QStringList sl;
			sl << "/usr/include";
			sl << "/usr/local/include";
			bool found = false;
			foreach(s, sl){
        if(conf->checkHeader(s, "libtorrent/kademlia/node.hpp")){
          found = true;
          break;
       	}
			}
			if(!found) return false;
				if(!conf->checkHeader(s, "libtorrent/extensions/ut_pex.hpp")){
					qWarning("Libtorrent >= v0.12 was not detected, PeX will be disabled.");
  	      conf->addDefine("NO_PEX");
				}
		  if(conf->checkHeader(s, "libtorrent/lsd.hpp")){
			        conf->addDefine("V_0_13");
			}
		}
		conf->addIncludePath(s);
		conf->addIncludePath(s+QDir::separator()+"libtorrent");

		s = conf->getenv("QC_WITH_LIBTORRENT_LIB");
		if(!s.isEmpty()) {
      			if(!conf->checkLibrary(s, "torrent")) {
			        return false;
			}
      			conf->addLib(QString("-L") + s);
		}else{
			QStringList sl;
			sl << "/usr/lib/";
			sl << "/usr/local/lib/";
			bool found = false;
			foreach(s, sl){
				if(conf->checkLibrary(s, "torrent")){
					found = true;
					break;
				}
			}
			if(!found) return false;
			conf->addLib(QString("-L") + s);
		}
		//conf->addLib("-ltorrent");
		return true;
	}
};
